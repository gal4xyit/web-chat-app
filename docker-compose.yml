services:
  app:
    build: .
    container_name: appContainer
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/chatDB
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/chat-app-realm
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_ID=spring-boot-chat-client
    networks:
      - chat-network

  db:
    image: postgres:15
    container_name: dbContainer
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: chatDB
    volumes:
      - postgres_chat_data:/var/lib/postgresql/data
    ports:
      - "5439:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d chatDB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - chat-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloakContainer
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8180:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - chat-network
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
      - keycloak_chat_data:/opt/keycloak/data

volumes:
  postgres_chat_data:
  keycloak_chat_data:

networks:
  chat-network:
    driver: bridge